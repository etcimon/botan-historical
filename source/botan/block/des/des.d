/*
* DES
* (C) 1999-2007 Jack Lloyd
*
* Distributed under the terms of the botan license.
*/
module botan.block.des.des;

import botan.loadstor;
import botan.rotate;
import botan.block.block_cipher;

/**
* DES
*/
class DES : Block_Cipher_Fixed_Params!(8, 8)
{
public:

	/*
	* DES Encryption
	*/
	void encrypt_n(ubyte* input, ubyte* output, size_t blocks) const
	{
		for (size_t i = 0; i != blocks; ++i)
		{
			ulong T = (DES_IPTAB1[input[0]]	  ) | (DES_IPTAB1[input[1]] << 1) |
				(DES_IPTAB1[input[2]] << 2) | (DES_IPTAB1[input[3]] << 3) |
					(DES_IPTAB1[input[4]] << 4) | (DES_IPTAB1[input[5]] << 5) |
					(DES_IPTAB1[input[6]] << 6) | (DES_IPTAB2[input[7]]	  );
			
			uint L = cast(uint)(T >> 32);
			uint R = cast(uint)(T);
			
			des_encrypt(L, R, &round_key[0]);
			
			T = (DES_FPTAB1[get_byte(0, L)] << 5) | (DES_FPTAB1[get_byte(1, L)] << 3) |
				(DES_FPTAB1[get_byte(2, L)] << 1) | (DES_FPTAB2[get_byte(3, L)] << 1) |
					(DES_FPTAB1[get_byte(0, R)] << 4) | (DES_FPTAB1[get_byte(1, R)] << 2) |
					(DES_FPTAB1[get_byte(2, R)]	  ) | (DES_FPTAB2[get_byte(3, R)]	  );
			T = rotate_left(T, 32);
			
			store_be(T, output);
			
			input += BLOCK_SIZE;
			output += BLOCK_SIZE;
		}
	}


	/*
	* DES Decryption
	*/
	void decrypt_n(ubyte* input, ubyte* output, size_t blocks) const
	{
		for (size_t i = 0; i != blocks; ++i)
		{
			ulong T = (DES_IPTAB1[input[0]]	  ) | (DES_IPTAB1[input[1]] << 1) |
				(DES_IPTAB1[input[2]] << 2) | (DES_IPTAB1[input[3]] << 3) |
					(DES_IPTAB1[input[4]] << 4) | (DES_IPTAB1[input[5]] << 5) |
					(DES_IPTAB1[input[6]] << 6) | (DES_IPTAB2[input[7]]	  );
			
			uint L = cast(uint)(T >> 32);
			uint R = cast(uint)(T);
			
			des_decrypt(L, R, &round_key[0]);
			
			T = (DES_FPTAB1[get_byte(0, L)] << 5) | (DES_FPTAB1[get_byte(1, L)] << 3) |
				(DES_FPTAB1[get_byte(2, L)] << 1) | (DES_FPTAB2[get_byte(3, L)] << 1) |
					(DES_FPTAB1[get_byte(0, R)] << 4) | (DES_FPTAB1[get_byte(1, R)] << 2) |
					(DES_FPTAB1[get_byte(2, R)]	  ) | (DES_FPTAB2[get_byte(3, R)]	  );
			
			T = rotate_left(T, 32);
			
			store_be(T, output);
			
			input += BLOCK_SIZE;
			output += BLOCK_SIZE;
		}
	}

	void clear()
	{
		zap(round_key);
	}

	string name() const { return "DES"; }
	BlockCipher clone() const { return new DES; }
private:
	/*
	* DES Key Schedule
	*/
	void key_schedule(in ubyte* key, size_t)
	{
		round_key.resize(32);
		des_key_schedule(&round_key[0], key);
	}

	secure_vector!uint round_key;
};

/**
* Triple DES
*/
class TripleDES : Block_Cipher_Fixed_Params!(8, 16, 24, 8)
{
public:
	/*
	* TripleDES Encryption
	*/
	void encrypt_n(ubyte* input, ubyte* output, size_t blocks) const
	{
		for (size_t i = 0; i != blocks; ++i)
		{
			ulong T = (DES_IPTAB1[input[0]]	  ) | (DES_IPTAB1[input[1]] << 1) |
				(DES_IPTAB1[input[2]] << 2) | (DES_IPTAB1[input[3]] << 3) |
					(DES_IPTAB1[input[4]] << 4) | (DES_IPTAB1[input[5]] << 5) |
					(DES_IPTAB1[input[6]] << 6) | (DES_IPTAB2[input[7]]	  );
			
			uint L = cast(uint)(T >> 32);
			uint R = cast(uint)(T);
			
			des_encrypt(L, R, &round_key[0]);
			des_decrypt(R, L, &round_key[32]);
			des_encrypt(L, R, &round_key[64]);
			
			T = (DES_FPTAB1[get_byte(0, L)] << 5) | (DES_FPTAB1[get_byte(1, L)] << 3) |
				(DES_FPTAB1[get_byte(2, L)] << 1) | (DES_FPTAB2[get_byte(3, L)] << 1) |
					(DES_FPTAB1[get_byte(0, R)] << 4) | (DES_FPTAB1[get_byte(1, R)] << 2) |
					(DES_FPTAB1[get_byte(2, R)]	  ) | (DES_FPTAB2[get_byte(3, R)]	  );
			
			T = rotate_left(T, 32);
			
			store_be(T, output);
			
			input += BLOCK_SIZE;
			output += BLOCK_SIZE;
		}
	}
	/*
	* TripleDES Decryption
	*/
	void decrypt_n(ubyte* input, ubyte* output, size_t blocks) const
	{
		for (size_t i = 0; i != blocks; ++i)
		{
			ulong T = (DES_IPTAB1[input[0]]	  ) | (DES_IPTAB1[input[1]] << 1) |
				(DES_IPTAB1[input[2]] << 2) | (DES_IPTAB1[input[3]] << 3) |
					(DES_IPTAB1[input[4]] << 4) | (DES_IPTAB1[input[5]] << 5) |
					(DES_IPTAB1[input[6]] << 6) | (DES_IPTAB2[input[7]]	  );
			
			uint L = cast(uint)(T >> 32);
			uint R = cast(uint)(T);
			
			des_decrypt(L, R, &round_key[64]);
			des_encrypt(R, L, &round_key[32]);
			des_decrypt(L, R, &round_key[0]);
			
			T = (DES_FPTAB1[get_byte(0, L)] << 5) | (DES_FPTAB1[get_byte(1, L)] << 3) |
				(DES_FPTAB1[get_byte(2, L)] << 1) | (DES_FPTAB2[get_byte(3, L)] << 1) |
					(DES_FPTAB1[get_byte(0, R)] << 4) | (DES_FPTAB1[get_byte(1, R)] << 2) |
					(DES_FPTAB1[get_byte(2, R)]	  ) | (DES_FPTAB2[get_byte(3, R)]	  );
			
			T = rotate_left(T, 32);
			
			store_be(T, output);
			
			input += BLOCK_SIZE;
			output += BLOCK_SIZE;
		}
	}

	void clear()
	{
		zap(round_key);
	}

	string name() const { return "TripleDES"; }
	BlockCipher clone() const { return new TripleDES; }
private:
	/*
	* TripleDES Key Schedule
	*/
	void key_schedule(in ubyte* key)
	{
		round_key.resize(3*32);
		des_key_schedule(&round_key[0], key);
		des_key_schedule(&round_key[32], key + 8);
		
		if (length == 24)
			des_key_schedule(&round_key[64], key + 16);
		else
			copy_mem(&round_key[64], &round_key[0], 32);
	}


	secure_vector!uint round_key;
};

/*
* DES Tables
*/

immutable uint[256] DES_SPBOX1 = [
	0x01010400, 0x00000000, 0x00010000, 0x01010404, 0x01010004, 0x00010404,
	0x00000004, 0x00010000, 0x00000400, 0x01010400, 0x01010404, 0x00000400,
	0x01000404, 0x01010004, 0x01000000, 0x00000004, 0x00000404, 0x01000400,
	0x01000400, 0x00010400, 0x00010400, 0x01010000, 0x01010000, 0x01000404,
	0x00010004, 0x01000004, 0x01000004, 0x00010004, 0x00000000, 0x00000404,
	0x00010404, 0x01000000, 0x00010000, 0x01010404, 0x00000004, 0x01010000,
	0x01010400, 0x01000000, 0x01000000, 0x00000400, 0x01010004, 0x00010000,
	0x00010400, 0x01000004, 0x00000400, 0x00000004, 0x01000404, 0x00010404,
	0x01010404, 0x00010004, 0x01010000, 0x01000404, 0x01000004, 0x00000404,
	0x00010404, 0x01010400, 0x00000404, 0x01000400, 0x01000400, 0x00000000,
	0x00010004, 0x00010400, 0x00000000, 0x01010004, 0x01010400, 0x00000000,
	0x00010000, 0x01010404, 0x01010004, 0x00010404, 0x00000004, 0x00010000,
	0x00000400, 0x01010400, 0x01010404, 0x00000400, 0x01000404, 0x01010004,
	0x01000000, 0x00000004, 0x00000404, 0x01000400, 0x01000400, 0x00010400,
	0x00010400, 0x01010000, 0x01010000, 0x01000404, 0x00010004, 0x01000004,
	0x01000004, 0x00010004, 0x00000000, 0x00000404, 0x00010404, 0x01000000,
	0x00010000, 0x01010404, 0x00000004, 0x01010000, 0x01010400, 0x01000000,
	0x01000000, 0x00000400, 0x01010004, 0x00010000, 0x00010400, 0x01000004,
	0x00000400, 0x00000004, 0x01000404, 0x00010404, 0x01010404, 0x00010004,
	0x01010000, 0x01000404, 0x01000004, 0x00000404, 0x00010404, 0x01010400,
	0x00000404, 0x01000400, 0x01000400, 0x00000000, 0x00010004, 0x00010400,
	0x00000000, 0x01010004, 0x01010400, 0x00000000, 0x00010000, 0x01010404,
	0x01010004, 0x00010404, 0x00000004, 0x00010000, 0x00000400, 0x01010400,
	0x01010404, 0x00000400, 0x01000404, 0x01010004, 0x01000000, 0x00000004,
	0x00000404, 0x01000400, 0x01000400, 0x00010400, 0x00010400, 0x01010000,
	0x01010000, 0x01000404, 0x00010004, 0x01000004, 0x01000004, 0x00010004,
	0x00000000, 0x00000404, 0x00010404, 0x01000000, 0x00010000, 0x01010404,
	0x00000004, 0x01010000, 0x01010400, 0x01000000, 0x01000000, 0x00000400,
	0x01010004, 0x00010000, 0x00010400, 0x01000004, 0x00000400, 0x00000004,
	0x01000404, 0x00010404, 0x01010404, 0x00010004, 0x01010000, 0x01000404,
	0x01000004, 0x00000404, 0x00010404, 0x01010400, 0x00000404, 0x01000400,
	0x01000400, 0x00000000, 0x00010004, 0x00010400, 0x00000000, 0x01010004,
	0x01010400, 0x00000000, 0x00010000, 0x01010404, 0x01010004, 0x00010404,
	0x00000004, 0x00010000, 0x00000400, 0x01010400, 0x01010404, 0x00000400,
	0x01000404, 0x01010004, 0x01000000, 0x00000004, 0x00000404, 0x01000400,
	0x01000400, 0x00010400, 0x00010400, 0x01010000, 0x01010000, 0x01000404,
	0x00010004, 0x01000004, 0x01000004, 0x00010004, 0x00000000, 0x00000404,
	0x00010404, 0x01000000, 0x00010000, 0x01010404, 0x00000004, 0x01010000,
	0x01010400, 0x01000000, 0x01000000, 0x00000400, 0x01010004, 0x00010000,
	0x00010400, 0x01000004, 0x00000400, 0x00000004, 0x01000404, 0x00010404,
	0x01010404, 0x00010004, 0x01010000, 0x01000404, 0x01000004, 0x00000404,
	0x00010404, 0x01010400, 0x00000404, 0x01000400, 0x01000400, 0x00000000,
	0x00010004, 0x00010400, 0x00000000, 0x01010004 ];

immutable uint[256] DES_SPBOX2 = [
	0x80108020, 0x80008000, 0x00008000, 0x00108020, 0x00100000, 0x00000020,
	0x80100020, 0x80008020, 0x80000020, 0x80108020, 0x80108000, 0x80000000,
	0x80008000, 0x00100000, 0x00000020, 0x80100020, 0x00108000, 0x00100020,
	0x80008020, 0x00000000, 0x80000000, 0x00008000, 0x00108020, 0x80100000,
	0x00100020, 0x80000020, 0x00000000, 0x00108000, 0x00008020, 0x80108000,
	0x80100000, 0x00008020, 0x00000000, 0x00108020, 0x80100020, 0x00100000,
	0x80008020, 0x80100000, 0x80108000, 0x00008000, 0x80100000, 0x80008000,
	0x00000020, 0x80108020, 0x00108020, 0x00000020, 0x00008000, 0x80000000,
	0x00008020, 0x80108000, 0x00100000, 0x80000020, 0x00100020, 0x80008020,
	0x80000020, 0x00100020, 0x00108000, 0x00000000, 0x80008000, 0x00008020,
	0x80000000, 0x80100020, 0x80108020, 0x00108000, 0x80108020, 0x80008000,
	0x00008000, 0x00108020, 0x00100000, 0x00000020, 0x80100020, 0x80008020,
	0x80000020, 0x80108020, 0x80108000, 0x80000000, 0x80008000, 0x00100000,
	0x00000020, 0x80100020, 0x00108000, 0x00100020, 0x80008020, 0x00000000,
	0x80000000, 0x00008000, 0x00108020, 0x80100000, 0x00100020, 0x80000020,
	0x00000000, 0x00108000, 0x00008020, 0x80108000, 0x80100000, 0x00008020,
	0x00000000, 0x00108020, 0x80100020, 0x00100000, 0x80008020, 0x80100000,
	0x80108000, 0x00008000, 0x80100000, 0x80008000, 0x00000020, 0x80108020,
	0x00108020, 0x00000020, 0x00008000, 0x80000000, 0x00008020, 0x80108000,
	0x00100000, 0x80000020, 0x00100020, 0x80008020, 0x80000020, 0x00100020,
	0x00108000, 0x00000000, 0x80008000, 0x00008020, 0x80000000, 0x80100020,
	0x80108020, 0x00108000, 0x80108020, 0x80008000, 0x00008000, 0x00108020,
	0x00100000, 0x00000020, 0x80100020, 0x80008020, 0x80000020, 0x80108020,
	0x80108000, 0x80000000, 0x80008000, 0x00100000, 0x00000020, 0x80100020,
	0x00108000, 0x00100020, 0x80008020, 0x00000000, 0x80000000, 0x00008000,
	0x00108020, 0x80100000, 0x00100020, 0x80000020, 0x00000000, 0x00108000,
	0x00008020, 0x80108000, 0x80100000, 0x00008020, 0x00000000, 0x00108020,
	0x80100020, 0x00100000, 0x80008020, 0x80100000, 0x80108000, 0x00008000,
	0x80100000, 0x80008000, 0x00000020, 0x80108020, 0x00108020, 0x00000020,
	0x00008000, 0x80000000, 0x00008020, 0x80108000, 0x00100000, 0x80000020,
	0x00100020, 0x80008020, 0x80000020, 0x00100020, 0x00108000, 0x00000000,
	0x80008000, 0x00008020, 0x80000000, 0x80100020, 0x80108020, 0x00108000,
	0x80108020, 0x80008000, 0x00008000, 0x00108020, 0x00100000, 0x00000020,
	0x80100020, 0x80008020, 0x80000020, 0x80108020, 0x80108000, 0x80000000,
	0x80008000, 0x00100000, 0x00000020, 0x80100020, 0x00108000, 0x00100020,
	0x80008020, 0x00000000, 0x80000000, 0x00008000, 0x00108020, 0x80100000,
	0x00100020, 0x80000020, 0x00000000, 0x00108000, 0x00008020, 0x80108000,
	0x80100000, 0x00008020, 0x00000000, 0x00108020, 0x80100020, 0x00100000,
	0x80008020, 0x80100000, 0x80108000, 0x00008000, 0x80100000, 0x80008000,
	0x00000020, 0x80108020, 0x00108020, 0x00000020, 0x00008000, 0x80000000,
	0x00008020, 0x80108000, 0x00100000, 0x80000020, 0x00100020, 0x80008020,
	0x80000020, 0x00100020, 0x00108000, 0x00000000, 0x80008000, 0x00008020,
	0x80000000, 0x80100020, 0x80108020, 0x00108000 ];

immutable uint[256] DES_SPBOX3 = [
	0x00000208, 0x08020200, 0x00000000, 0x08020008, 0x08000200, 0x00000000,
	0x00020208, 0x08000200, 0x00020008, 0x08000008, 0x08000008, 0x00020000,
	0x08020208, 0x00020008, 0x08020000, 0x00000208, 0x08000000, 0x00000008,
	0x08020200, 0x00000200, 0x00020200, 0x08020000, 0x08020008, 0x00020208,
	0x08000208, 0x00020200, 0x00020000, 0x08000208, 0x00000008, 0x08020208,
	0x00000200, 0x08000000, 0x08020200, 0x08000000, 0x00020008, 0x00000208,
	0x00020000, 0x08020200, 0x08000200, 0x00000000, 0x00000200, 0x00020008,
	0x08020208, 0x08000200, 0x08000008, 0x00000200, 0x00000000, 0x08020008,
	0x08000208, 0x00020000, 0x08000000, 0x08020208, 0x00000008, 0x00020208,
	0x00020200, 0x08000008, 0x08020000, 0x08000208, 0x00000208, 0x08020000,
	0x00020208, 0x00000008, 0x08020008, 0x00020200, 0x00000208, 0x08020200,
	0x00000000, 0x08020008, 0x08000200, 0x00000000, 0x00020208, 0x08000200,
	0x00020008, 0x08000008, 0x08000008, 0x00020000, 0x08020208, 0x00020008,
	0x08020000, 0x00000208, 0x08000000, 0x00000008, 0x08020200, 0x00000200,
	0x00020200, 0x08020000, 0x08020008, 0x00020208, 0x08000208, 0x00020200,
	0x00020000, 0x08000208, 0x00000008, 0x08020208, 0x00000200, 0x08000000,
	0x08020200, 0x08000000, 0x00020008, 0x00000208, 0x00020000, 0x08020200,
	0x08000200, 0x00000000, 0x00000200, 0x00020008, 0x08020208, 0x08000200,
	0x08000008, 0x00000200, 0x00000000, 0x08020008, 0x08000208, 0x00020000,
	0x08000000, 0x08020208, 0x00000008, 0x00020208, 0x00020200, 0x08000008,
	0x08020000, 0x08000208, 0x00000208, 0x08020000, 0x00020208, 0x00000008,
	0x08020008, 0x00020200, 0x00000208, 0x08020200, 0x00000000, 0x08020008,
	0x08000200, 0x00000000, 0x00020208, 0x08000200, 0x00020008, 0x08000008,
	0x08000008, 0x00020000, 0x08020208, 0x00020008, 0x08020000, 0x00000208,
	0x08000000, 0x00000008, 0x08020200, 0x00000200, 0x00020200, 0x08020000,
	0x08020008, 0x00020208, 0x08000208, 0x00020200, 0x00020000, 0x08000208,
	0x00000008, 0x08020208, 0x00000200, 0x08000000, 0x08020200, 0x08000000,
	0x00020008, 0x00000208, 0x00020000, 0x08020200, 0x08000200, 0x00000000,
	0x00000200, 0x00020008, 0x08020208, 0x08000200, 0x08000008, 0x00000200,
	0x00000000, 0x08020008, 0x08000208, 0x00020000, 0x08000000, 0x08020208,
	0x00000008, 0x00020208, 0x00020200, 0x08000008, 0x08020000, 0x08000208,
	0x00000208, 0x08020000, 0x00020208, 0x00000008, 0x08020008, 0x00020200,
	0x00000208, 0x08020200, 0x00000000, 0x08020008, 0x08000200, 0x00000000,
	0x00020208, 0x08000200, 0x00020008, 0x08000008, 0x08000008, 0x00020000,
	0x08020208, 0x00020008, 0x08020000, 0x00000208, 0x08000000, 0x00000008,
	0x08020200, 0x00000200, 0x00020200, 0x08020000, 0x08020008, 0x00020208,
	0x08000208, 0x00020200, 0x00020000, 0x08000208, 0x00000008, 0x08020208,
	0x00000200, 0x08000000, 0x08020200, 0x08000000, 0x00020008, 0x00000208,
	0x00020000, 0x08020200, 0x08000200, 0x00000000, 0x00000200, 0x00020008,
	0x08020208, 0x08000200, 0x08000008, 0x00000200, 0x00000000, 0x08020008,
	0x08000208, 0x00020000, 0x08000000, 0x08020208, 0x00000008, 0x00020208,
	0x00020200, 0x08000008, 0x08020000, 0x08000208, 0x00000208, 0x08020000,
	0x00020208, 0x00000008, 0x08020008, 0x00020200 ];

immutable uint[256] DES_SPBOX4 = [
	0x00802001, 0x00002081, 0x00002081, 0x00000080, 0x00802080, 0x00800081,
	0x00800001, 0x00002001, 0x00000000, 0x00802000, 0x00802000, 0x00802081,
	0x00000081, 0x00000000, 0x00800080, 0x00800001, 0x00000001, 0x00002000,
	0x00800000, 0x00802001, 0x00000080, 0x00800000, 0x00002001, 0x00002080,
	0x00800081, 0x00000001, 0x00002080, 0x00800080, 0x00002000, 0x00802080,
	0x00802081, 0x00000081, 0x00800080, 0x00800001, 0x00802000, 0x00802081,
	0x00000081, 0x00000000, 0x00000000, 0x00802000, 0x00002080, 0x00800080,
	0x00800081, 0x00000001, 0x00802001, 0x00002081, 0x00002081, 0x00000080,
	0x00802081, 0x00000081, 0x00000001, 0x00002000, 0x00800001, 0x00002001,
	0x00802080, 0x00800081, 0x00002001, 0x00002080, 0x00800000, 0x00802001,
	0x00000080, 0x00800000, 0x00002000, 0x00802080, 0x00802001, 0x00002081,
	0x00002081, 0x00000080, 0x00802080, 0x00800081, 0x00800001, 0x00002001,
	0x00000000, 0x00802000, 0x00802000, 0x00802081, 0x00000081, 0x00000000,
	0x00800080, 0x00800001, 0x00000001, 0x00002000, 0x00800000, 0x00802001,
	0x00000080, 0x00800000, 0x00002001, 0x00002080, 0x00800081, 0x00000001,
	0x00002080, 0x00800080, 0x00002000, 0x00802080, 0x00802081, 0x00000081,
	0x00800080, 0x00800001, 0x00802000, 0x00802081, 0x00000081, 0x00000000,
	0x00000000, 0x00802000, 0x00002080, 0x00800080, 0x00800081, 0x00000001,
	0x00802001, 0x00002081, 0x00002081, 0x00000080, 0x00802081, 0x00000081,
	0x00000001, 0x00002000, 0x00800001, 0x00002001, 0x00802080, 0x00800081,
	0x00002001, 0x00002080, 0x00800000, 0x00802001, 0x00000080, 0x00800000,
	0x00002000, 0x00802080, 0x00802001, 0x00002081, 0x00002081, 0x00000080,
	0x00802080, 0x00800081, 0x00800001, 0x00002001, 0x00000000, 0x00802000,
	0x00802000, 0x00802081, 0x00000081, 0x00000000, 0x00800080, 0x00800001,
	0x00000001, 0x00002000, 0x00800000, 0x00802001, 0x00000080, 0x00800000,
	0x00002001, 0x00002080, 0x00800081, 0x00000001, 0x00002080, 0x00800080,
	0x00002000, 0x00802080, 0x00802081, 0x00000081, 0x00800080, 0x00800001,
	0x00802000, 0x00802081, 0x00000081, 0x00000000, 0x00000000, 0x00802000,
	0x00002080, 0x00800080, 0x00800081, 0x00000001, 0x00802001, 0x00002081,
	0x00002081, 0x00000080, 0x00802081, 0x00000081, 0x00000001, 0x00002000,
	0x00800001, 0x00002001, 0x00802080, 0x00800081, 0x00002001, 0x00002080,
	0x00800000, 0x00802001, 0x00000080, 0x00800000, 0x00002000, 0x00802080,
	0x00802001, 0x00002081, 0x00002081, 0x00000080, 0x00802080, 0x00800081,
	0x00800001, 0x00002001, 0x00000000, 0x00802000, 0x00802000, 0x00802081,
	0x00000081, 0x00000000, 0x00800080, 0x00800001, 0x00000001, 0x00002000,
	0x00800000, 0x00802001, 0x00000080, 0x00800000, 0x00002001, 0x00002080,
	0x00800081, 0x00000001, 0x00002080, 0x00800080, 0x00002000, 0x00802080,
	0x00802081, 0x00000081, 0x00800080, 0x00800001, 0x00802000, 0x00802081,
	0x00000081, 0x00000000, 0x00000000, 0x00802000, 0x00002080, 0x00800080,
	0x00800081, 0x00000001, 0x00802001, 0x00002081, 0x00002081, 0x00000080,
	0x00802081, 0x00000081, 0x00000001, 0x00002000, 0x00800001, 0x00002001,
	0x00802080, 0x00800081, 0x00002001, 0x00002080, 0x00800000, 0x00802001,
	0x00000080, 0x00800000, 0x00002000, 0x00802080 ];

immutable uint[256] DES_SPBOX5 = [
	0x00000100, 0x02080100, 0x02080000, 0x42000100, 0x00080000, 0x00000100,
	0x40000000, 0x02080000, 0x40080100, 0x00080000, 0x02000100, 0x40080100,
	0x42000100, 0x42080000, 0x00080100, 0x40000000, 0x02000000, 0x40080000,
	0x40080000, 0x00000000, 0x40000100, 0x42080100, 0x42080100, 0x02000100,
	0x42080000, 0x40000100, 0x00000000, 0x42000000, 0x02080100, 0x02000000,
	0x42000000, 0x00080100, 0x00080000, 0x42000100, 0x00000100, 0x02000000,
	0x40000000, 0x02080000, 0x42000100, 0x40080100, 0x02000100, 0x40000000,
	0x42080000, 0x02080100, 0x40080100, 0x00000100, 0x02000000, 0x42080000,
	0x42080100, 0x00080100, 0x42000000, 0x42080100, 0x02080000, 0x00000000,
	0x40080000, 0x42000000, 0x00080100, 0x02000100, 0x40000100, 0x00080000,
	0x00000000, 0x40080000, 0x02080100, 0x40000100, 0x00000100, 0x02080100,
	0x02080000, 0x42000100, 0x00080000, 0x00000100, 0x40000000, 0x02080000,
	0x40080100, 0x00080000, 0x02000100, 0x40080100, 0x42000100, 0x42080000,
	0x00080100, 0x40000000, 0x02000000, 0x40080000, 0x40080000, 0x00000000,
	0x40000100, 0x42080100, 0x42080100, 0x02000100, 0x42080000, 0x40000100,
	0x00000000, 0x42000000, 0x02080100, 0x02000000, 0x42000000, 0x00080100,
	0x00080000, 0x42000100, 0x00000100, 0x02000000, 0x40000000, 0x02080000,
	0x42000100, 0x40080100, 0x02000100, 0x40000000, 0x42080000, 0x02080100,
	0x40080100, 0x00000100, 0x02000000, 0x42080000, 0x42080100, 0x00080100,
	0x42000000, 0x42080100, 0x02080000, 0x00000000, 0x40080000, 0x42000000,
	0x00080100, 0x02000100, 0x40000100, 0x00080000, 0x00000000, 0x40080000,
	0x02080100, 0x40000100, 0x00000100, 0x02080100, 0x02080000, 0x42000100,
	0x00080000, 0x00000100, 0x40000000, 0x02080000, 0x40080100, 0x00080000,
	0x02000100, 0x40080100, 0x42000100, 0x42080000, 0x00080100, 0x40000000,
	0x02000000, 0x40080000, 0x40080000, 0x00000000, 0x40000100, 0x42080100,
	0x42080100, 0x02000100, 0x42080000, 0x40000100, 0x00000000, 0x42000000,
	0x02080100, 0x02000000, 0x42000000, 0x00080100, 0x00080000, 0x42000100,
	0x00000100, 0x02000000, 0x40000000, 0x02080000, 0x42000100, 0x40080100,
	0x02000100, 0x40000000, 0x42080000, 0x02080100, 0x40080100, 0x00000100,
	0x02000000, 0x42080000, 0x42080100, 0x00080100, 0x42000000, 0x42080100,
	0x02080000, 0x00000000, 0x40080000, 0x42000000, 0x00080100, 0x02000100,
	0x40000100, 0x00080000, 0x00000000, 0x40080000, 0x02080100, 0x40000100,
	0x00000100, 0x02080100, 0x02080000, 0x42000100, 0x00080000, 0x00000100,
	0x40000000, 0x02080000, 0x40080100, 0x00080000, 0x02000100, 0x40080100,
	0x42000100, 0x42080000, 0x00080100, 0x40000000, 0x02000000, 0x40080000,
	0x40080000, 0x00000000, 0x40000100, 0x42080100, 0x42080100, 0x02000100,
	0x42080000, 0x40000100, 0x00000000, 0x42000000, 0x02080100, 0x02000000,
	0x42000000, 0x00080100, 0x00080000, 0x42000100, 0x00000100, 0x02000000,
	0x40000000, 0x02080000, 0x42000100, 0x40080100, 0x02000100, 0x40000000,
	0x42080000, 0x02080100, 0x40080100, 0x00000100, 0x02000000, 0x42080000,
	0x42080100, 0x00080100, 0x42000000, 0x42080100, 0x02080000, 0x00000000,
	0x40080000, 0x42000000, 0x00080100, 0x02000100, 0x40000100, 0x00080000,
	0x00000000, 0x40080000, 0x02080100, 0x40000100 ];

immutable uint[256] DES_SPBOX6 = [
	0x20000010, 0x20400000, 0x00004000, 0x20404010, 0x20400000, 0x00000010,
	0x20404010, 0x00400000, 0x20004000, 0x00404010, 0x00400000, 0x20000010,
	0x00400010, 0x20004000, 0x20000000, 0x00004010, 0x00000000, 0x00400010,
	0x20004010, 0x00004000, 0x00404000, 0x20004010, 0x00000010, 0x20400010,
	0x20400010, 0x00000000, 0x00404010, 0x20404000, 0x00004010, 0x00404000,
	0x20404000, 0x20000000, 0x20004000, 0x00000010, 0x20400010, 0x00404000,
	0x20404010, 0x00400000, 0x00004010, 0x20000010, 0x00400000, 0x20004000,
	0x20000000, 0x00004010, 0x20000010, 0x20404010, 0x00404000, 0x20400000,
	0x00404010, 0x20404000, 0x00000000, 0x20400010, 0x00000010, 0x00004000,
	0x20400000, 0x00404010, 0x00004000, 0x00400010, 0x20004010, 0x00000000,
	0x20404000, 0x20000000, 0x00400010, 0x20004010, 0x20000010, 0x20400000,
	0x00004000, 0x20404010, 0x20400000, 0x00000010, 0x20404010, 0x00400000,
	0x20004000, 0x00404010, 0x00400000, 0x20000010, 0x00400010, 0x20004000,
	0x20000000, 0x00004010, 0x00000000, 0x00400010, 0x20004010, 0x00004000,
	0x00404000, 0x20004010, 0x00000010, 0x20400010, 0x20400010, 0x00000000,
	0x00404010, 0x20404000, 0x00004010, 0x00404000, 0x20404000, 0x20000000,
	0x20004000, 0x00000010, 0x20400010, 0x00404000, 0x20404010, 0x00400000,
	0x00004010, 0x20000010, 0x00400000, 0x20004000, 0x20000000, 0x00004010,
	0x20000010, 0x20404010, 0x00404000, 0x20400000, 0x00404010, 0x20404000,
	0x00000000, 0x20400010, 0x00000010, 0x00004000, 0x20400000, 0x00404010,
	0x00004000, 0x00400010, 0x20004010, 0x00000000, 0x20404000, 0x20000000,
	0x00400010, 0x20004010, 0x20000010, 0x20400000, 0x00004000, 0x20404010,
	0x20400000, 0x00000010, 0x20404010, 0x00400000, 0x20004000, 0x00404010,
	0x00400000, 0x20000010, 0x00400010, 0x20004000, 0x20000000, 0x00004010,
	0x00000000, 0x00400010, 0x20004010, 0x00004000, 0x00404000, 0x20004010,
	0x00000010, 0x20400010, 0x20400010, 0x00000000, 0x00404010, 0x20404000,
	0x00004010, 0x00404000, 0x20404000, 0x20000000, 0x20004000, 0x00000010,
	0x20400010, 0x00404000, 0x20404010, 0x00400000, 0x00004010, 0x20000010,
	0x00400000, 0x20004000, 0x20000000, 0x00004010, 0x20000010, 0x20404010,
	0x00404000, 0x20400000, 0x00404010, 0x20404000, 0x00000000, 0x20400010,
	0x00000010, 0x00004000, 0x20400000, 0x00404010, 0x00004000, 0x00400010,
	0x20004010, 0x00000000, 0x20404000, 0x20000000, 0x00400010, 0x20004010,
	0x20000010, 0x20400000, 0x00004000, 0x20404010, 0x20400000, 0x00000010,
	0x20404010, 0x00400000, 0x20004000, 0x00404010, 0x00400000, 0x20000010,
	0x00400010, 0x20004000, 0x20000000, 0x00004010, 0x00000000, 0x00400010,
	0x20004010, 0x00004000, 0x00404000, 0x20004010, 0x00000010, 0x20400010,
	0x20400010, 0x00000000, 0x00404010, 0x20404000, 0x00004010, 0x00404000,
	0x20404000, 0x20000000, 0x20004000, 0x00000010, 0x20400010, 0x00404000,
	0x20404010, 0x00400000, 0x00004010, 0x20000010, 0x00400000, 0x20004000,
	0x20000000, 0x00004010, 0x20000010, 0x20404010, 0x00404000, 0x20400000,
	0x00404010, 0x20404000, 0x00000000, 0x20400010, 0x00000010, 0x00004000,
	0x20400000, 0x00404010, 0x00004000, 0x00400010, 0x20004010, 0x00000000,
	0x20404000, 0x20000000, 0x00400010, 0x20004010 ];

immutable uint[256] DES_SPBOX7 = [
	0x00200000, 0x04200002, 0x04000802, 0x00000000, 0x00000800, 0x04000802,
	0x00200802, 0x04200800, 0x04200802, 0x00200000, 0x00000000, 0x04000002,
	0x00000002, 0x04000000, 0x04200002, 0x00000802, 0x04000800, 0x00200802,
	0x00200002, 0x04000800, 0x04000002, 0x04200000, 0x04200800, 0x00200002,
	0x04200000, 0x00000800, 0x00000802, 0x04200802, 0x00200800, 0x00000002,
	0x04000000, 0x00200800, 0x04000000, 0x00200800, 0x00200000, 0x04000802,
	0x04000802, 0x04200002, 0x04200002, 0x00000002, 0x00200002, 0x04000000,
	0x04000800, 0x00200000, 0x04200800, 0x00000802, 0x00200802, 0x04200800,
	0x00000802, 0x04000002, 0x04200802, 0x04200000, 0x00200800, 0x00000000,
	0x00000002, 0x04200802, 0x00000000, 0x00200802, 0x04200000, 0x00000800,
	0x04000002, 0x04000800, 0x00000800, 0x00200002, 0x00200000, 0x04200002,
	0x04000802, 0x00000000, 0x00000800, 0x04000802, 0x00200802, 0x04200800,
	0x04200802, 0x00200000, 0x00000000, 0x04000002, 0x00000002, 0x04000000,
	0x04200002, 0x00000802, 0x04000800, 0x00200802, 0x00200002, 0x04000800,
	0x04000002, 0x04200000, 0x04200800, 0x00200002, 0x04200000, 0x00000800,
	0x00000802, 0x04200802, 0x00200800, 0x00000002, 0x04000000, 0x00200800,
	0x04000000, 0x00200800, 0x00200000, 0x04000802, 0x04000802, 0x04200002,
	0x04200002, 0x00000002, 0x00200002, 0x04000000, 0x04000800, 0x00200000,
	0x04200800, 0x00000802, 0x00200802, 0x04200800, 0x00000802, 0x04000002,
	0x04200802, 0x04200000, 0x00200800, 0x00000000, 0x00000002, 0x04200802,
	0x00000000, 0x00200802, 0x04200000, 0x00000800, 0x04000002, 0x04000800,
	0x00000800, 0x00200002, 0x00200000, 0x04200002, 0x04000802, 0x00000000,
	0x00000800, 0x04000802, 0x00200802, 0x04200800, 0x04200802, 0x00200000,
	0x00000000, 0x04000002, 0x00000002, 0x04000000, 0x04200002, 0x00000802,
	0x04000800, 0x00200802, 0x00200002, 0x04000800, 0x04000002, 0x04200000,
	0x04200800, 0x00200002, 0x04200000, 0x00000800, 0x00000802, 0x04200802,
	0x00200800, 0x00000002, 0x04000000, 0x00200800, 0x04000000, 0x00200800,
	0x00200000, 0x04000802, 0x04000802, 0x04200002, 0x04200002, 0x00000002,
	0x00200002, 0x04000000, 0x04000800, 0x00200000, 0x04200800, 0x00000802,
	0x00200802, 0x04200800, 0x00000802, 0x04000002, 0x04200802, 0x04200000,
	0x00200800, 0x00000000, 0x00000002, 0x04200802, 0x00000000, 0x00200802,
	0x04200000, 0x00000800, 0x04000002, 0x04000800, 0x00000800, 0x00200002,
	0x00200000, 0x04200002, 0x04000802, 0x00000000, 0x00000800, 0x04000802,
	0x00200802, 0x04200800, 0x04200802, 0x00200000, 0x00000000, 0x04000002,
	0x00000002, 0x04000000, 0x04200002, 0x00000802, 0x04000800, 0x00200802,
	0x00200002, 0x04000800, 0x04000002, 0x04200000, 0x04200800, 0x00200002,
	0x04200000, 0x00000800, 0x00000802, 0x04200802, 0x00200800, 0x00000002,
	0x04000000, 0x00200800, 0x04000000, 0x00200800, 0x00200000, 0x04000802,
	0x04000802, 0x04200002, 0x04200002, 0x00000002, 0x00200002, 0x04000000,
	0x04000800, 0x00200000, 0x04200800, 0x00000802, 0x00200802, 0x04200800,
	0x00000802, 0x04000002, 0x04200802, 0x04200000, 0x00200800, 0x00000000,
	0x00000002, 0x04200802, 0x00000000, 0x00200802, 0x04200000, 0x00000800,
	0x04000002, 0x04000800, 0x00000800, 0x00200002 ];

immutable uint[256] DES_SPBOX8 = [
	0x10001040, 0x00001000, 0x00040000, 0x10041040, 0x10000000, 0x10001040,
	0x00000040, 0x10000000, 0x00040040, 0x10040000, 0x10041040, 0x00041000,
	0x10041000, 0x00041040, 0x00001000, 0x00000040, 0x10040000, 0x10000040,
	0x10001000, 0x00001040, 0x00041000, 0x00040040, 0x10040040, 0x10041000,
	0x00001040, 0x00000000, 0x00000000, 0x10040040, 0x10000040, 0x10001000,
	0x00041040, 0x00040000, 0x00041040, 0x00040000, 0x10041000, 0x00001000,
	0x00000040, 0x10040040, 0x00001000, 0x00041040, 0x10001000, 0x00000040,
	0x10000040, 0x10040000, 0x10040040, 0x10000000, 0x00040000, 0x10001040,
	0x00000000, 0x10041040, 0x00040040, 0x10000040, 0x10040000, 0x10001000,
	0x10001040, 0x00000000, 0x10041040, 0x00041000, 0x00041000, 0x00001040,
	0x00001040, 0x00040040, 0x10000000, 0x10041000, 0x10001040, 0x00001000,
	0x00040000, 0x10041040, 0x10000000, 0x10001040, 0x00000040, 0x10000000,
	0x00040040, 0x10040000, 0x10041040, 0x00041000, 0x10041000, 0x00041040,
	0x00001000, 0x00000040, 0x10040000, 0x10000040, 0x10001000, 0x00001040,
	0x00041000, 0x00040040, 0x10040040, 0x10041000, 0x00001040, 0x00000000,
	0x00000000, 0x10040040, 0x10000040, 0x10001000, 0x00041040, 0x00040000,
	0x00041040, 0x00040000, 0x10041000, 0x00001000, 0x00000040, 0x10040040,
	0x00001000, 0x00041040, 0x10001000, 0x00000040, 0x10000040, 0x10040000,
	0x10040040, 0x10000000, 0x00040000, 0x10001040, 0x00000000, 0x10041040,
	0x00040040, 0x10000040, 0x10040000, 0x10001000, 0x10001040, 0x00000000,
	0x10041040, 0x00041000, 0x00041000, 0x00001040, 0x00001040, 0x00040040,
	0x10000000, 0x10041000, 0x10001040, 0x00001000, 0x00040000, 0x10041040,
	0x10000000, 0x10001040, 0x00000040, 0x10000000, 0x00040040, 0x10040000,
	0x10041040, 0x00041000, 0x10041000, 0x00041040, 0x00001000, 0x00000040,
	0x10040000, 0x10000040, 0x10001000, 0x00001040, 0x00041000, 0x00040040,
	0x10040040, 0x10041000, 0x00001040, 0x00000000, 0x00000000, 0x10040040,
	0x10000040, 0x10001000, 0x00041040, 0x00040000, 0x00041040, 0x00040000,
	0x10041000, 0x00001000, 0x00000040, 0x10040040, 0x00001000, 0x00041040,
	0x10001000, 0x00000040, 0x10000040, 0x10040000, 0x10040040, 0x10000000,
	0x00040000, 0x10001040, 0x00000000, 0x10041040, 0x00040040, 0x10000040,
	0x10040000, 0x10001000, 0x10001040, 0x00000000, 0x10041040, 0x00041000,
	0x00041000, 0x00001040, 0x00001040, 0x00040040, 0x10000000, 0x10041000,
	0x10001040, 0x00001000, 0x00040000, 0x10041040, 0x10000000, 0x10001040,
	0x00000040, 0x10000000, 0x00040040, 0x10040000, 0x10041040, 0x00041000,
	0x10041000, 0x00041040, 0x00001000, 0x00000040, 0x10040000, 0x10000040,
	0x10001000, 0x00001040, 0x00041000, 0x00040040, 0x10040040, 0x10041000,
	0x00001040, 0x00000000, 0x00000000, 0x10040040, 0x10000040, 0x10001000,
	0x00041040, 0x00040000, 0x00041040, 0x00040000, 0x10041000, 0x00001000,
	0x00000040, 0x10040040, 0x00001000, 0x00041040, 0x10001000, 0x00000040,
	0x10000040, 0x10040000, 0x10040040, 0x10000000, 0x00040000, 0x10001040,
	0x00000000, 0x10041040, 0x00040040, 0x10000040, 0x10040000, 0x10001000,
	0x10001040, 0x00000000, 0x10041040, 0x00041000, 0x00041000, 0x00001040,
	0x00001040, 0x00040040, 0x10000000, 0x10041000 ];

immutable ulong[256] DES_IPTAB1 = [
	0x0000000000000000, 0x0000000200000000, 0x0000000000000002, 0x0000000200000002,
	0x0000020000000000, 0x0000020200000000, 0x0000020000000002, 0x0000020200000002,
	0x0000000000000200, 0x0000000200000200, 0x0000000000000202, 0x0000000200000202,
	0x0000020000000200, 0x0000020200000200, 0x0000020000000202, 0x0000020200000202,
	0x0002000000000000, 0x0002000200000000, 0x0002000000000002, 0x0002000200000002,
	0x0002020000000000, 0x0002020200000000, 0x0002020000000002, 0x0002020200000002,
	0x0002000000000200, 0x0002000200000200, 0x0002000000000202, 0x0002000200000202,
	0x0002020000000200, 0x0002020200000200, 0x0002020000000202, 0x0002020200000202,
	0x0000000000020000, 0x0000000200020000, 0x0000000000020002, 0x0000000200020002,
	0x0000020000020000, 0x0000020200020000, 0x0000020000020002, 0x0000020200020002,
	0x0000000000020200, 0x0000000200020200, 0x0000000000020202, 0x0000000200020202,
	0x0000020000020200, 0x0000020200020200, 0x0000020000020202, 0x0000020200020202,
	0x0002000000020000, 0x0002000200020000, 0x0002000000020002, 0x0002000200020002,
	0x0002020000020000, 0x0002020200020000, 0x0002020000020002, 0x0002020200020002,
	0x0002000000020200, 0x0002000200020200, 0x0002000000020202, 0x0002000200020202,
	0x0002020000020200, 0x0002020200020200, 0x0002020000020202, 0x0002020200020202,
	0x0200000000000000, 0x0200000200000000, 0x0200000000000002, 0x0200000200000002,
	0x0200020000000000, 0x0200020200000000, 0x0200020000000002, 0x0200020200000002,
	0x0200000000000200, 0x0200000200000200, 0x0200000000000202, 0x0200000200000202,
	0x0200020000000200, 0x0200020200000200, 0x0200020000000202, 0x0200020200000202,
	0x0202000000000000, 0x0202000200000000, 0x0202000000000002, 0x0202000200000002,
	0x0202020000000000, 0x0202020200000000, 0x0202020000000002, 0x0202020200000002,
	0x0202000000000200, 0x0202000200000200, 0x0202000000000202, 0x0202000200000202,
	0x0202020000000200, 0x0202020200000200, 0x0202020000000202, 0x0202020200000202,
	0x0200000000020000, 0x0200000200020000, 0x0200000000020002, 0x0200000200020002,
	0x0200020000020000, 0x0200020200020000, 0x0200020000020002, 0x0200020200020002,
	0x0200000000020200, 0x0200000200020200, 0x0200000000020202, 0x0200000200020202,
	0x0200020000020200, 0x0200020200020200, 0x0200020000020202, 0x0200020200020202,
	0x0202000000020000, 0x0202000200020000, 0x0202000000020002, 0x0202000200020002,
	0x0202020000020000, 0x0202020200020000, 0x0202020000020002, 0x0202020200020002,
	0x0202000000020200, 0x0202000200020200, 0x0202000000020202, 0x0202000200020202,
	0x0202020000020200, 0x0202020200020200, 0x0202020000020202, 0x0202020200020202,
	0x0000000002000000, 0x0000000202000000, 0x0000000002000002, 0x0000000202000002,
	0x0000020002000000, 0x0000020202000000, 0x0000020002000002, 0x0000020202000002,
	0x0000000002000200, 0x0000000202000200, 0x0000000002000202, 0x0000000202000202,
	0x0000020002000200, 0x0000020202000200, 0x0000020002000202, 0x0000020202000202,
	0x0002000002000000, 0x0002000202000000, 0x0002000002000002, 0x0002000202000002,
	0x0002020002000000, 0x0002020202000000, 0x0002020002000002, 0x0002020202000002,
	0x0002000002000200, 0x0002000202000200, 0x0002000002000202, 0x0002000202000202,
	0x0002020002000200, 0x0002020202000200, 0x0002020002000202, 0x0002020202000202,
	0x0000000002020000, 0x0000000202020000, 0x0000000002020002, 0x0000000202020002,
	0x0000020002020000, 0x0000020202020000, 0x0000020002020002, 0x0000020202020002,
	0x0000000002020200, 0x0000000202020200, 0x0000000002020202, 0x0000000202020202,
	0x0000020002020200, 0x0000020202020200, 0x0000020002020202, 0x0000020202020202,
	0x0002000002020000, 0x0002000202020000, 0x0002000002020002, 0x0002000202020002,
	0x0002020002020000, 0x0002020202020000, 0x0002020002020002, 0x0002020202020002,
	0x0002000002020200, 0x0002000202020200, 0x0002000002020202, 0x0002000202020202,
	0x0002020002020200, 0x0002020202020200, 0x0002020002020202, 0x0002020202020202,
	0x0200000002000000, 0x0200000202000000, 0x0200000002000002, 0x0200000202000002,
	0x0200020002000000, 0x0200020202000000, 0x0200020002000002, 0x0200020202000002,
	0x0200000002000200, 0x0200000202000200, 0x0200000002000202, 0x0200000202000202,
	0x0200020002000200, 0x0200020202000200, 0x0200020002000202, 0x0200020202000202,
	0x0202000002000000, 0x0202000202000000, 0x0202000002000002, 0x0202000202000002,
	0x0202020002000000, 0x0202020202000000, 0x0202020002000002, 0x0202020202000002,
	0x0202000002000200, 0x0202000202000200, 0x0202000002000202, 0x0202000202000202,
	0x0202020002000200, 0x0202020202000200, 0x0202020002000202, 0x0202020202000202,
	0x0200000002020000, 0x0200000202020000, 0x0200000002020002, 0x0200000202020002,
	0x0200020002020000, 0x0200020202020000, 0x0200020002020002, 0x0200020202020002,
	0x0200000002020200, 0x0200000202020200, 0x0200000002020202, 0x0200000202020202,
	0x0200020002020200, 0x0200020202020200, 0x0200020002020202, 0x0200020202020202,
	0x0202000002020000, 0x0202000202020000, 0x0202000002020002, 0x0202000202020002,
	0x0202020002020000, 0x0202020202020000, 0x0202020002020002, 0x0202020202020002,
	0x0202000002020200, 0x0202000202020200, 0x0202000002020202, 0x0202000202020202,
	0x0202020002020200, 0x0202020202020200, 0x0202020002020202, 0x0202020202020202 ];

immutable ulong[256] DES_IPTAB2 = [
	0x0000000000000000, 0x0000010000000000, 0x0000000000000100, 0x0000010000000100,
	0x0001000000000000, 0x0001010000000000, 0x0001000000000100, 0x0001010000000100,
	0x0000000000010000, 0x0000010000010000, 0x0000000000010100, 0x0000010000010100,
	0x0001000000010000, 0x0001010000010000, 0x0001000000010100, 0x0001010000010100,
	0x0100000000000000, 0x0100010000000000, 0x0100000000000100, 0x0100010000000100,
	0x0101000000000000, 0x0101010000000000, 0x0101000000000100, 0x0101010000000100,
	0x0100000000010000, 0x0100010000010000, 0x0100000000010100, 0x0100010000010100,
	0x0101000000010000, 0x0101010000010000, 0x0101000000010100, 0x0101010000010100,
	0x0000000001000000, 0x0000010001000000, 0x0000000001000100, 0x0000010001000100,
	0x0001000001000000, 0x0001010001000000, 0x0001000001000100, 0x0001010001000100,
	0x0000000001010000, 0x0000010001010000, 0x0000000001010100, 0x0000010001010100,
	0x0001000001010000, 0x0001010001010000, 0x0001000001010100, 0x0001010001010100,
	0x0100000001000000, 0x0100010001000000, 0x0100000001000100, 0x0100010001000100,
	0x0101000001000000, 0x0101010001000000, 0x0101000001000100, 0x0101010001000100,
	0x0100000001010000, 0x0100010001010000, 0x0100000001010100, 0x0100010001010100,
	0x0101000001010000, 0x0101010001010000, 0x0101000001010100, 0x0101010001010100,
	0x0000000100000000, 0x0000010100000000, 0x0000000100000100, 0x0000010100000100,
	0x0001000100000000, 0x0001010100000000, 0x0001000100000100, 0x0001010100000100,
	0x0000000100010000, 0x0000010100010000, 0x0000000100010100, 0x0000010100010100,
	0x0001000100010000, 0x0001010100010000, 0x0001000100010100, 0x0001010100010100,
	0x0100000100000000, 0x0100010100000000, 0x0100000100000100, 0x0100010100000100,
	0x0101000100000000, 0x0101010100000000, 0x0101000100000100, 0x0101010100000100,
	0x0100000100010000, 0x0100010100010000, 0x0100000100010100, 0x0100010100010100,
	0x0101000100010000, 0x0101010100010000, 0x0101000100010100, 0x0101010100010100,
	0x0000000101000000, 0x0000010101000000, 0x0000000101000100, 0x0000010101000100,
	0x0001000101000000, 0x0001010101000000, 0x0001000101000100, 0x0001010101000100,
	0x0000000101010000, 0x0000010101010000, 0x0000000101010100, 0x0000010101010100,
	0x0001000101010000, 0x0001010101010000, 0x0001000101010100, 0x0001010101010100,
	0x0100000101000000, 0x0100010101000000, 0x0100000101000100, 0x0100010101000100,
	0x0101000101000000, 0x0101010101000000, 0x0101000101000100, 0x0101010101000100,
	0x0100000101010000, 0x0100010101010000, 0x0100000101010100, 0x0100010101010100,
	0x0101000101010000, 0x0101010101010000, 0x0101000101010100, 0x0101010101010100,
	0x0000000000000001, 0x0000010000000001, 0x0000000000000101, 0x0000010000000101,
	0x0001000000000001, 0x0001010000000001, 0x0001000000000101, 0x0001010000000101,
	0x0000000000010001, 0x0000010000010001, 0x0000000000010101, 0x0000010000010101,
	0x0001000000010001, 0x0001010000010001, 0x0001000000010101, 0x0001010000010101,
	0x0100000000000001, 0x0100010000000001, 0x0100000000000101, 0x0100010000000101,
	0x0101000000000001, 0x0101010000000001, 0x0101000000000101, 0x0101010000000101,
	0x0100000000010001, 0x0100010000010001, 0x0100000000010101, 0x0100010000010101,
	0x0101000000010001, 0x0101010000010001, 0x0101000000010101, 0x0101010000010101,
	0x0000000001000001, 0x0000010001000001, 0x0000000001000101, 0x0000010001000101,
	0x0001000001000001, 0x0001010001000001, 0x0001000001000101, 0x0001010001000101,
	0x0000000001010001, 0x0000010001010001, 0x0000000001010101, 0x0000010001010101,
	0x0001000001010001, 0x0001010001010001, 0x0001000001010101, 0x0001010001010101,
	0x0100000001000001, 0x0100010001000001, 0x0100000001000101, 0x0100010001000101,
	0x0101000001000001, 0x0101010001000001, 0x0101000001000101, 0x0101010001000101,
	0x0100000001010001, 0x0100010001010001, 0x0100000001010101, 0x0100010001010101,
	0x0101000001010001, 0x0101010001010001, 0x0101000001010101, 0x0101010001010101,
	0x0000000100000001, 0x0000010100000001, 0x0000000100000101, 0x0000010100000101,
	0x0001000100000001, 0x0001010100000001, 0x0001000100000101, 0x0001010100000101,
	0x0000000100010001, 0x0000010100010001, 0x0000000100010101, 0x0000010100010101,
	0x0001000100010001, 0x0001010100010001, 0x0001000100010101, 0x0001010100010101,
	0x0100000100000001, 0x0100010100000001, 0x0100000100000101, 0x0100010100000101,
	0x0101000100000001, 0x0101010100000001, 0x0101000100000101, 0x0101010100000101,
	0x0100000100010001, 0x0100010100010001, 0x0100000100010101, 0x0100010100010101,
	0x0101000100010001, 0x0101010100010001, 0x0101000100010101, 0x0101010100010101,
	0x0000000101000001, 0x0000010101000001, 0x0000000101000101, 0x0000010101000101,
	0x0001000101000001, 0x0001010101000001, 0x0001000101000101, 0x0001010101000101,
	0x0000000101010001, 0x0000010101010001, 0x0000000101010101, 0x0000010101010101,
	0x0001000101010001, 0x0001010101010001, 0x0001000101010101, 0x0001010101010101,
	0x0100000101000001, 0x0100010101000001, 0x0100000101000101, 0x0100010101000101,
	0x0101000101000001, 0x0101010101000001, 0x0101000101000101, 0x0101010101000101,
	0x0100000101010001, 0x0100010101010001, 0x0100000101010101, 0x0100010101010101,
	0x0101000101010001, 0x0101010101010001, 0x0101000101010101, 0x0101010101010101 ];

immutable ulong[256] DES_FPTAB1 = [
	0x0000000000000000, 0x0000000100000000, 0x0000000004000000, 0x0000000104000000,
	0x0000000000040000, 0x0000000100040000, 0x0000000004040000, 0x0000000104040000,
	0x0000000000000400, 0x0000000100000400, 0x0000000004000400, 0x0000000104000400,
	0x0000000000040400, 0x0000000100040400, 0x0000000004040400, 0x0000000104040400,
	0x0000000000000004, 0x0000000100000004, 0x0000000004000004, 0x0000000104000004,
	0x0000000000040004, 0x0000000100040004, 0x0000000004040004, 0x0000000104040004,
	0x0000000000000404, 0x0000000100000404, 0x0000000004000404, 0x0000000104000404,
	0x0000000000040404, 0x0000000100040404, 0x0000000004040404, 0x0000000104040404,
	0x0400000000000000, 0x0400000100000000, 0x0400000004000000, 0x0400000104000000,
	0x0400000000040000, 0x0400000100040000, 0x0400000004040000, 0x0400000104040000,
	0x0400000000000400, 0x0400000100000400, 0x0400000004000400, 0x0400000104000400,
	0x0400000000040400, 0x0400000100040400, 0x0400000004040400, 0x0400000104040400,
	0x0400000000000004, 0x0400000100000004, 0x0400000004000004, 0x0400000104000004,
	0x0400000000040004, 0x0400000100040004, 0x0400000004040004, 0x0400000104040004,
	0x0400000000000404, 0x0400000100000404, 0x0400000004000404, 0x0400000104000404,
	0x0400000000040404, 0x0400000100040404, 0x0400000004040404, 0x0400000104040404,
	0x0004000000000000, 0x0004000100000000, 0x0004000004000000, 0x0004000104000000,
	0x0004000000040000, 0x0004000100040000, 0x0004000004040000, 0x0004000104040000,
	0x0004000000000400, 0x0004000100000400, 0x0004000004000400, 0x0004000104000400,
	0x0004000000040400, 0x0004000100040400, 0x0004000004040400, 0x0004000104040400,
	0x0004000000000004, 0x0004000100000004, 0x0004000004000004, 0x0004000104000004,
	0x0004000000040004, 0x0004000100040004, 0x0004000004040004, 0x0004000104040004,
	0x0004000000000404, 0x0004000100000404, 0x0004000004000404, 0x0004000104000404,
	0x0004000000040404, 0x0004000100040404, 0x0004000004040404, 0x0004000104040404,
	0x0404000000000000, 0x0404000100000000, 0x0404000004000000, 0x0404000104000000,
	0x0404000000040000, 0x0404000100040000, 0x0404000004040000, 0x0404000104040000,
	0x0404000000000400, 0x0404000100000400, 0x0404000004000400, 0x0404000104000400,
	0x0404000000040400, 0x0404000100040400, 0x0404000004040400, 0x0404000104040400,
	0x0404000000000004, 0x0404000100000004, 0x0404000004000004, 0x0404000104000004,
	0x0404000000040004, 0x0404000100040004, 0x0404000004040004, 0x0404000104040004,
	0x0404000000000404, 0x0404000100000404, 0x0404000004000404, 0x0404000104000404,
	0x0404000000040404, 0x0404000100040404, 0x0404000004040404, 0x0404000104040404,
	0x0000040000000000, 0x0000040100000000, 0x0000040004000000, 0x0000040104000000,
	0x0000040000040000, 0x0000040100040000, 0x0000040004040000, 0x0000040104040000,
	0x0000040000000400, 0x0000040100000400, 0x0000040004000400, 0x0000040104000400,
	0x0000040000040400, 0x0000040100040400, 0x0000040004040400, 0x0000040104040400,
	0x0000040000000004, 0x0000040100000004, 0x0000040004000004, 0x0000040104000004,
	0x0000040000040004, 0x0000040100040004, 0x0000040004040004, 0x0000040104040004,
	0x0000040000000404, 0x0000040100000404, 0x0000040004000404, 0x0000040104000404,
	0x0000040000040404, 0x0000040100040404, 0x0000040004040404, 0x0000040104040404,
	0x0400040000000000, 0x0400040100000000, 0x0400040004000000, 0x0400040104000000,
	0x0400040000040000, 0x0400040100040000, 0x0400040004040000, 0x0400040104040000,
	0x0400040000000400, 0x0400040100000400, 0x0400040004000400, 0x0400040104000400,
	0x0400040000040400, 0x0400040100040400, 0x0400040004040400, 0x0400040104040400,
	0x0400040000000004, 0x0400040100000004, 0x0400040004000004, 0x0400040104000004,
	0x0400040000040004, 0x0400040100040004, 0x0400040004040004, 0x0400040104040004,
	0x0400040000000404, 0x0400040100000404, 0x0400040004000404, 0x0400040104000404,
	0x0400040000040404, 0x0400040100040404, 0x0400040004040404, 0x0400040104040404,
	0x0004040000000000, 0x0004040100000000, 0x0004040004000000, 0x0004040104000000,
	0x0004040000040000, 0x0004040100040000, 0x0004040004040000, 0x0004040104040000,
	0x0004040000000400, 0x0004040100000400, 0x0004040004000400, 0x0004040104000400,
	0x0004040000040400, 0x0004040100040400, 0x0004040004040400, 0x0004040104040400,
	0x0004040000000004, 0x0004040100000004, 0x0004040004000004, 0x0004040104000004,
	0x0004040000040004, 0x0004040100040004, 0x0004040004040004, 0x0004040104040004,
	0x0004040000000404, 0x0004040100000404, 0x0004040004000404, 0x0004040104000404,
	0x0004040000040404, 0x0004040100040404, 0x0004040004040404, 0x0004040104040404,
	0x0404040000000000, 0x0404040100000000, 0x0404040004000000, 0x0404040104000000,
	0x0404040000040000, 0x0404040100040000, 0x0404040004040000, 0x0404040104040000,
	0x0404040000000400, 0x0404040100000400, 0x0404040004000400, 0x0404040104000400,
	0x0404040000040400, 0x0404040100040400, 0x0404040004040400, 0x0404040104040400,
	0x0404040000000004, 0x0404040100000004, 0x0404040004000004, 0x0404040104000004,
	0x0404040000040004, 0x0404040100040004, 0x0404040004040004, 0x0404040104040004,
	0x0404040000000404, 0x0404040100000404, 0x0404040004000404, 0x0404040104000404,
	0x0404040000040404, 0x0404040100040404, 0x0404040004040404, 0x0404040104040404 ];

immutable ulong[256] DES_FPTAB2 = [
	0x0000000000000000, 0x0000004000000000, 0x0000000001000000, 0x0000004001000000,
	0x0000000000010000, 0x0000004000010000, 0x0000000001010000, 0x0000004001010000,
	0x0000000000000100, 0x0000004000000100, 0x0000000001000100, 0x0000004001000100,
	0x0000000000010100, 0x0000004000010100, 0x0000000001010100, 0x0000004001010100,
	0x0000000000000001, 0x0000004000000001, 0x0000000001000001, 0x0000004001000001,
	0x0000000000010001, 0x0000004000010001, 0x0000000001010001, 0x0000004001010001,
	0x0000000000000101, 0x0000004000000101, 0x0000000001000101, 0x0000004001000101,
	0x0000000000010101, 0x0000004000010101, 0x0000000001010101, 0x0000004001010101,
	0x0100000000000000, 0x0100004000000000, 0x0100000001000000, 0x0100004001000000,
	0x0100000000010000, 0x0100004000010000, 0x0100000001010000, 0x0100004001010000,
	0x0100000000000100, 0x0100004000000100, 0x0100000001000100, 0x0100004001000100,
	0x0100000000010100, 0x0100004000010100, 0x0100000001010100, 0x0100004001010100,
	0x0100000000000001, 0x0100004000000001, 0x0100000001000001, 0x0100004001000001,
	0x0100000000010001, 0x0100004000010001, 0x0100000001010001, 0x0100004001010001,
	0x0100000000000101, 0x0100004000000101, 0x0100000001000101, 0x0100004001000101,
	0x0100000000010101, 0x0100004000010101, 0x0100000001010101, 0x0100004001010101,
	0x0001000000000000, 0x0001004000000000, 0x0001000001000000, 0x0001004001000000,
	0x0001000000010000, 0x0001004000010000, 0x0001000001010000, 0x0001004001010000,
	0x0001000000000100, 0x0001004000000100, 0x0001000001000100, 0x0001004001000100,
	0x0001000000010100, 0x0001004000010100, 0x0001000001010100, 0x0001004001010100,
	0x0001000000000001, 0x0001004000000001, 0x0001000001000001, 0x0001004001000001,
	0x0001000000010001, 0x0001004000010001, 0x0001000001010001, 0x0001004001010001,
	0x0001000000000101, 0x0001004000000101, 0x0001000001000101, 0x0001004001000101,
	0x0001000000010101, 0x0001004000010101, 0x0001000001010101, 0x0001004001010101,
	0x0101000000000000, 0x0101004000000000, 0x0101000001000000, 0x0101004001000000,
	0x0101000000010000, 0x0101004000010000, 0x0101000001010000, 0x0101004001010000,
	0x0101000000000100, 0x0101004000000100, 0x0101000001000100, 0x0101004001000100,
	0x0101000000010100, 0x0101004000010100, 0x0101000001010100, 0x0101004001010100,
	0x0101000000000001, 0x0101004000000001, 0x0101000001000001, 0x0101004001000001,
	0x0101000000010001, 0x0101004000010001, 0x0101000001010001, 0x0101004001010001,
	0x0101000000000101, 0x0101004000000101, 0x0101000001000101, 0x0101004001000101,
	0x0101000000010101, 0x0101004000010101, 0x0101000001010101, 0x0101004001010101,
	0x0000010000000000, 0x0000014000000000, 0x0000010001000000, 0x0000014001000000,
	0x0000010000010000, 0x0000014000010000, 0x0000010001010000, 0x0000014001010000,
	0x0000010000000100, 0x0000014000000100, 0x0000010001000100, 0x0000014001000100,
	0x0000010000010100, 0x0000014000010100, 0x0000010001010100, 0x0000014001010100,
	0x0000010000000001, 0x0000014000000001, 0x0000010001000001, 0x0000014001000001,
	0x0000010000010001, 0x0000014000010001, 0x0000010001010001, 0x0000014001010001,
	0x0000010000000101, 0x0000014000000101, 0x0000010001000101, 0x0000014001000101,
	0x0000010000010101, 0x0000014000010101, 0x0000010001010101, 0x0000014001010101,
	0x0100010000000000, 0x0100014000000000, 0x0100010001000000, 0x0100014001000000,
	0x0100010000010000, 0x0100014000010000, 0x0100010001010000, 0x0100014001010000,
	0x0100010000000100, 0x0100014000000100, 0x0100010001000100, 0x0100014001000100,
	0x0100010000010100, 0x0100014000010100, 0x0100010001010100, 0x0100014001010100,
	0x0100010000000001, 0x0100014000000001, 0x0100010001000001, 0x0100014001000001,
	0x0100010000010001, 0x0100014000010001, 0x0100010001010001, 0x0100014001010001,
	0x0100010000000101, 0x0100014000000101, 0x0100010001000101, 0x0100014001000101,
	0x0100010000010101, 0x0100014000010101, 0x0100010001010101, 0x0100014001010101,
	0x0001010000000000, 0x0001014000000000, 0x0001010001000000, 0x0001014001000000,
	0x0001010000010000, 0x0001014000010000, 0x0001010001010000, 0x0001014001010000,
	0x0001010000000100, 0x0001014000000100, 0x0001010001000100, 0x0001014001000100,
	0x0001010000010100, 0x0001014000010100, 0x0001010001010100, 0x0001014001010100,
	0x0001010000000001, 0x0001014000000001, 0x0001010001000001, 0x0001014001000001,
	0x0001010000010001, 0x0001014000010001, 0x0001010001010001, 0x0001014001010001,
	0x0001010000000101, 0x0001014000000101, 0x0001010001000101, 0x0001014001000101,
	0x0001010000010101, 0x0001014000010101, 0x0001010001010101, 0x0001014001010101,
	0x0101010000000000, 0x0101014000000000, 0x0101010001000000, 0x0101014001000000,
	0x0101010000010000, 0x0101014000010000, 0x0101010001010000, 0x0101014001010000,
	0x0101010000000100, 0x0101014000000100, 0x0101010001000100, 0x0101014001000100,
	0x0101010000010100, 0x0101014000010100, 0x0101010001010100, 0x0101014001010100,
	0x0101010000000001, 0x0101014000000001, 0x0101010001000001, 0x0101014001000001,
	0x0101010000010001, 0x0101014000010001, 0x0101010001010001, 0x0101014001010001,
	0x0101010000000101, 0x0101014000000101, 0x0101010001000101, 0x0101014001000101,
	0x0101010000010101, 0x0101014000010101, 0x0101010001010101, 0x0101014001010101 ];
	
package {
	/*
	* DES Key Schedule
	*/
	void des_key_schedule(uint[32] round_key, in ubyte[8] key)
	{
		immutable ubyte[16] ROT = [ 1, 1, 2, 2, 2, 2, 2, 2,
			1, 2, 2, 2, 2, 2, 2, 1 ];
		
		uint C = ((key[7] & 0x80) << 20) | ((key[6] & 0x80) << 19) |
			((key[5] & 0x80) << 18) | ((key[4] & 0x80) << 17) |
				((key[3] & 0x80) << 16) | ((key[2] & 0x80) << 15) |
				((key[1] & 0x80) << 14) | ((key[0] & 0x80) << 13) |
				((key[7] & 0x40) << 13) | ((key[6] & 0x40) << 12) |
				((key[5] & 0x40) << 11) | ((key[4] & 0x40) << 10) |
				((key[3] & 0x40) <<  9) | ((key[2] & 0x40) <<  8) |
				((key[1] & 0x40) <<  7) | ((key[0] & 0x40) <<  6) |
				((key[7] & 0x20) <<  6) | ((key[6] & 0x20) <<  5) |
				((key[5] & 0x20) <<  4) | ((key[4] & 0x20) <<  3) |
				((key[3] & 0x20) <<  2) | ((key[2] & 0x20) <<  1) |
				((key[1] & 0x20)		) | ((key[0] & 0x20) >>  1) |
				((key[7] & 0x10) >>  1) | ((key[6] & 0x10) >>  2) |
				((key[5] & 0x10) >>  3) | ((key[4] & 0x10) >>  4);
		uint D = ((key[7] & 0x02) << 26) | ((key[6] & 0x02) << 25) |
			((key[5] & 0x02) << 24) | ((key[4] & 0x02) << 23) |
				((key[3] & 0x02) << 22) | ((key[2] & 0x02) << 21) |
				((key[1] & 0x02) << 20) | ((key[0] & 0x02) << 19) |
				((key[7] & 0x04) << 17) | ((key[6] & 0x04) << 16) |
				((key[5] & 0x04) << 15) | ((key[4] & 0x04) << 14) |
				((key[3] & 0x04) << 13) | ((key[2] & 0x04) << 12) |
				((key[1] & 0x04) << 11) | ((key[0] & 0x04) << 10) |
				((key[7] & 0x08) <<  8) | ((key[6] & 0x08) <<  7) |
				((key[5] & 0x08) <<  6) | ((key[4] & 0x08) <<  5) |
				((key[3] & 0x08) <<  4) | ((key[2] & 0x08) <<  3) |
				((key[1] & 0x08) <<  2) | ((key[0] & 0x08) <<  1) |
				((key[3] & 0x10) >>  1) | ((key[2] & 0x10) >>  2) |
				((key[1] & 0x10) >>  3) | ((key[0] & 0x10) >>  4);
		
		for (size_t i = 0; i != 16; ++i)
		{
			C = ((C << ROT[i]) | (C >> (28-ROT[i]))) & 0x0FFFFFFF;
			D = ((D << ROT[i]) | (D >> (28-ROT[i]))) & 0x0FFFFFFF;
			round_key[2*i  ] = ((C & 0x00000010) << 22) | ((C & 0x00000800) << 17) |
				((C & 0x00000020) << 16) | ((C & 0x00004004) << 15) |
					((C & 0x00000200) << 11) | ((C & 0x00020000) << 10) |
					((C & 0x01000000) >>  6) | ((C & 0x00100000) >>  4) |
					((C & 0x00010000) <<  3) | ((C & 0x08000000) >>  2) |
					((C & 0x00800000) <<  1) | ((D & 0x00000010) <<  8) |
					((D & 0x00000002) <<  7) | ((D & 0x00000001) <<  2) |
					((D & 0x00000200)		) | ((D & 0x00008000) >>  2) |
					((D & 0x00000088) >>  3) | ((D & 0x00001000) >>  7) |
					((D & 0x00080000) >>  9) | ((D & 0x02020000) >> 14) |
					((D & 0x00400000) >> 21);
			round_key[2*i+1] = ((C & 0x00000001) << 28) | ((C & 0x00000082) << 18) |
				((C & 0x00002000) << 14) | ((C & 0x00000100) << 10) |
					((C & 0x00001000) <<  9) | ((C & 0x00040000) <<  6) |
					((C & 0x02400000) <<  4) | ((C & 0x00008000) <<  2) |
					((C & 0x00200000) >>  1) | ((C & 0x04000000) >> 10) |
					((D & 0x00000020) <<  6) | ((D & 0x00000100)		) |
					((D & 0x00000800) >>  1) | ((D & 0x00000040) >>  3) |
					((D & 0x00010000) >>  4) | ((D & 0x00000400) >>  5) |
					((D & 0x00004000) >> 10) | ((D & 0x04000000) >> 13) |
					((D & 0x00800000) >> 14) | ((D & 0x00100000) >> 18) |
					((D & 0x01000000) >> 24) | ((D & 0x08000000) >> 26);
		}
	}
	
	/*
	* DES Encryption
	*/
	void des_encrypt(ref uint L, ref uint R,
	                 in uint[32] round_key)
	{
		for (size_t i = 0; i != 16; i += 2)
		{
			uint T0, T1;
			
			T0 = rotate_right(R, 4) ^ round_key[2*i];
			T1 =				  R	  ^ round_key[2*i + 1];
			
			L ^= DES_SPBOX1[get_byte(0, T0)] ^ DES_SPBOX2[get_byte(0, T1)] ^
				DES_SPBOX3[get_byte(1, T0)] ^ DES_SPBOX4[get_byte(1, T1)] ^
				DES_SPBOX5[get_byte(2, T0)] ^ DES_SPBOX6[get_byte(2, T1)] ^
				DES_SPBOX7[get_byte(3, T0)] ^ DES_SPBOX8[get_byte(3, T1)];
			
			T0 = rotate_right(L, 4) ^ round_key[2*i + 2];
			T1 =				  L	  ^ round_key[2*i + 3];
			
			R ^= DES_SPBOX1[get_byte(0, T0)] ^ DES_SPBOX2[get_byte(0, T1)] ^
				DES_SPBOX3[get_byte(1, T0)] ^ DES_SPBOX4[get_byte(1, T1)] ^
				DES_SPBOX5[get_byte(2, T0)] ^ DES_SPBOX6[get_byte(2, T1)] ^
				DES_SPBOX7[get_byte(3, T0)] ^ DES_SPBOX8[get_byte(3, T1)];
		}
	}
	
	/*
	* DES Decryption
	*/
	void des_decrypt(ref uint L, ref uint R,
	                 in uint[32] round_key)
	{
		for (size_t i = 16; i != 0; i -= 2)
		{
			uint T0, T1;
			
			T0 = rotate_right(R, 4) ^ round_key[2*i - 2];
			T1 =				  R	  ^ round_key[2*i - 1];
			
			L ^= DES_SPBOX1[get_byte(0, T0)] ^ DES_SPBOX2[get_byte(0, T1)] ^
				DES_SPBOX3[get_byte(1, T0)] ^ DES_SPBOX4[get_byte(1, T1)] ^
				DES_SPBOX5[get_byte(2, T0)] ^ DES_SPBOX6[get_byte(2, T1)] ^
				DES_SPBOX7[get_byte(3, T0)] ^ DES_SPBOX8[get_byte(3, T1)];
			
			T0 = rotate_right(L, 4) ^ round_key[2*i - 4];
			T1 =				  L	  ^ round_key[2*i - 3];
			
			R ^= DES_SPBOX1[get_byte(0, T0)] ^ DES_SPBOX2[get_byte(0, T1)] ^
				DES_SPBOX3[get_byte(1, T0)] ^ DES_SPBOX4[get_byte(1, T1)] ^
				DES_SPBOX5[get_byte(2, T0)] ^ DES_SPBOX6[get_byte(2, T1)] ^
				DES_SPBOX7[get_byte(3, T0)] ^ DES_SPBOX8[get_byte(3, T1)];
		}
	}
	
}
